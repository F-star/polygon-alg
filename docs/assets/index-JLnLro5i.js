(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&i(r)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();const z=(t,n,s,i)=>{const{x:e,y:o}=t,{x:r,y:c}=n,{x:l,y:f}=s,{x:h,y}=i,x=c-o,L=e-r,a=e*c-r*o,g=y-f,u=l-h,O=l*y-h*f,I=x*u-L*g;if(Math.abs(I)<1e-9)return null;const M=(a*u-O*L)/I,d=(x*O-a*g)/I;return M>=Math.min(e,r)&&M<=Math.max(e,r)&&d>=Math.min(o,c)&&d<=Math.max(o,c)&&M>=Math.min(l,h)&&M<=Math.max(l,h)&&d>=Math.min(f,y)&&d<=Math.max(f,y)?{x:M,y:d}:null},j=(t,n)=>Math.sqrt(Math.pow(t.x-n.x,2)+Math.pow(t.y-n.y,2));function C(t){const n=[],s=t.length;for(let i=0;i<s;i++){const e=t[i],o=t[(i+1)%s];(e.x!==o.x||e.y!==o.y)&&n.push(e)}return n}function N(t){const n=[],s=A(t);if(t.length<3)return{crossPts:n,adjList:s};const i=new Map,e=t.length;for(let o=0;o<e-1;o++){const r=t[o],c=t[o+1];let l=o+2;for(;l<e;l++){const f=(l+1)%e;if(o===0&&f===0)continue;const h=t[l],y=t[f],x=z(r,c,h,y);if(x){n.push(x);const L=[],a=e+n.length-1;{const g=`${o}-${o+1}`;i.has(g)||i.set(g,[[0,o],[j(r,c),o+1]]);const u=i.get(g),O=j(r,x),[I,M]=E(u.map(v=>v[0]),O),d=u[I][1],P=u[M][1];L.push(d,P),u.splice(M,0,[O,a]);const m=s[d];m.indexOf(d)!==-1&&(m[m.indexOf(d)]=a),m.indexOf(P)!==-1&&(m[m.indexOf(P)]=a);const p=s[P];p.indexOf(d)!==-1&&(p[p.indexOf(d)]=a),p.indexOf(P)!==-1&&(p[p.indexOf(P)]=a)}{const g=`${l}-${f}`;i.has(g)||i.set(g,[[0,l],[j(h,y),f]]);const u=i.get(g),O=j(h,x),[I,M]=E(u.map(v=>v[0]),O),d=u[I][1],P=u[M][1];L.push(d,P),u.splice(M,0,[O,a]);const m=s[d];m.indexOf(d)!==-1&&(m[m.indexOf(d)]=a),m.indexOf(P)!==-1&&(m[m.indexOf(P)]=a);const p=s[P];p.indexOf(d)!==-1&&(p[p.indexOf(d)]=a),p.indexOf(P)!==-1&&(p[p.indexOf(P)]=a)}s.push(L)}}}return{crossPts:n,adjList:s}}const K=[{x:0,y:0},{x:6,y:0},{x:0,y:10},{x:6,y:10}],Y=N(K);console.log(Y);function E(t,n){let s=0,i=t.length-1;for(let e=0;e<t.length-1;e++){const o=t[e],r=t[e+1];if(n>=o&&n<=r){s=e,i=e+1;break}}return[s,i]}function A(t){const n=[],s=t.length;for(let i=0;i<s;i++){const e=i-1<0?s-1:i-1,o=(i+1)%s;n.push([e,o])}return n}const H=t=>{t=C(t);const{crossPts:n,adjList:s}=N(t),i=[...t,...n];if(t.length<=3)return{crossPts:n,adjList:s,resultIndices:[],resultPoints:t};let e=t[0],o=0;for(let c=1;c<t.length;c++){const l=t[c];(l.y>e.y||l.y===e.y&&l.x<e.x)&&(e=l,o=c)}console.log("最底边的点",e);const r=[o];{const c=s[o];let l=1/0,f=-1;for(const h of c){const y=i[h],x=q(e.x,e.y,y.x,y.y,{x:-1,y:0});console.log("rad"+h,R(x)),x<l&&(l=x,f=h)}console.log("顺时针的下一个点",{minRadIndex:f,minDeg:R(l)}),r.push(f)}for(let c=1;c<999999;c++){const l=r[c-1],f=r[c],h=i[l],y=i[f],x={x:h.x-y.x,y:h.y-y.y},L=s[r[c]];let a=1/0,g=-1;for(const u of L){if(u===l)continue;const O=i[u],I=q(y.x,y.y,O.x,O.y,x);I<a&&(a=I,g=u)}if(g===r[0]){console.log("完成，最终轮廓多边形为",r);break}r.push(g)}return console.log("轮廓多边形的点",r),{crossPts:n,adjList:s,resultIndices:r,resultPoints:r.map(c=>i[c])}},X=Math.PI*2;function q(t,n,s,i,e){const o=[s-t,i-n],r=[e.x,e.y],c=o[0]*r[0]+o[1]*r[1],l=Math.sqrt(o[0]*o[0]+o[1]*o[1])*Math.sqrt(r[0]*r[0]+r[1]*r[1]);let f=Math.acos(c/l);return B(e,{x:o[0],y:o[1]})>0&&(f=X-f),f}function R(t){return t*180/Math.PI}function B(t,n){return t.x*n.y-n.x*t.y}const w=document.querySelector("#draw-area"),D=[];let b=null;const F=t=>{const n=t.clientX,s=t.clientY;D.push({x:n,y:s}),T()},U=t=>{const n=t.clientX,s=t.clientY;b={x:n,y:s},T()},T=()=>{const t=[...D];b&&t.push(b);const n=w.getContext("2d");n.clearRect(0,0,w.width,w.height);const{crossPts:s,adjList:i,resultIndices:e,resultPoints:o}=H(t);G(o),_(n,t);for(let r=0;r<t.length;r++){const c=t[r];$(n,c),S(n,c,r+"")}for(let r=0;r<s.length;r++){const c=s[r];$(n,c,"#f04"),S(n,c,t.length+r+"","#f04")}document.querySelector("#outlinePoints").innerHTML=e.join(", "),document.querySelector("#adjListInfo").innerHTML=k(i)},$=(t,{x:n,y:s},i)=>{t.save(),i&&(t.fillStyle=i),t.beginPath(),t.arc(n,s,2,0,Math.PI*2),t.fill(),t.closePath(),t.restore()},S=(t,n,s,i,e=-3)=>{t.save();const o=-10;i&&(t.fillStyle=i),t.font="12px sans-serif",t.fillText(s,n.x+e,n.y+o),t.restore()};function _(t,n){t.save(),t.beginPath();for(let s=0;s<n.length;s++){const i=n[s];t.lineTo(i.x,i.y)}t.closePath(),t.stroke(),t.restore()}function V(t,n){t.save(),t.beginPath(),t.fillStyle="#dde3e9";for(let s=0;s<n.length;s++){const i=n[s];t.lineTo(i.x,i.y)}t.closePath(),t.fill(),t.restore()}const k=t=>t.map((n,s)=>`${s}: [${n.join(", ")}]`).join("<br>");function G(t){const n=document.querySelector("#outline"),s=n.getContext("2d");s.clearRect(0,0,n.width,n.height),V(s,t),_(s,t);const i=new Set;for(let e=0;e<t.length;e++){const o=t[e];$(s,o);const r=`${o.x}-${o.y}`;if(i.has(r)){S(s,o,`(${e})`,void 0,10);continue}else i.add(r),S(s,o,e+"")}}w.addEventListener("mousedown",F);w.addEventListener("mousemove",U);
